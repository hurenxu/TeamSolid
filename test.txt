import React from 'react';
import { shallow, mount, render } from 'enzyme';
import sinon from 'sinon';
import ReactComponent from ../ReactComponent
describe('Login Component', () => {
  it('should allow users to login', () => {
    expect(shallow(<ReactComponent />.exists(<form className='lgin'> </form>)).toBe(true)
  });

  it('should have props for email and password', function () {
    const wrapper = shallow(<ReactComponent/>);
    expect(wrapper.props().email).to.be.defined;
    expect(wrapper.props().password).to.be.defined;
  });

  it('should simulates click events', ()=> {
    const onButtonClick = sinon.spy();
    const wrapper = shallow(<Foo onButtonClick={onButtonClick} />);
    wrapper.find('LoginButton').simulate('click');
    assert(onButtonClick.calledOnce);
});

  // within the Login components describe function
  it('renders a email input', () => {
    expect(shallow(<ReactComponent />).find('#email').length).toEqual(1)
   });
  it('renders a password input', () => {
    expect(shallow(<ReactComponent />).find('#password').length).toEqual(1)
   });
});

// within the Login components describe function
describe('Email input', () => {
  
  it('should respond to change event and change the state of the Login Component', () => {
   
   const wrapper = shallow(<ReactComponent />);
   wrapper.find('#email').simulate('change', {target: {name: 'email', value: 'blah@gmail.com'}});
   
  expect(wrapper.state('email')).toEqual('blah@gmail.com');
  });
 });

describe('Password input', () => {
  
  it('should respond to change event and change the state of the Login Component', () => {
   
   const wrapper = shallow(<Login />);
   wrapper.find('#password').simulate('change', {target: {name: 'password', value: 'cats'}});
   
   expect(wrapper.state('password')).toEqual('cats');
  });
 });